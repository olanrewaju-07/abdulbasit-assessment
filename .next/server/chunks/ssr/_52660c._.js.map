{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/My%20Project/Forcyte/component/Hero.tsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useRef } from 'react';\r\n\r\nexport default function HeroSection () {\r\n  const textRef = useRef(null); // Reference to the text element\r\n  const sentence = \"We build products that shape a better future\"; // Your sentence\r\n\r\n  useEffect(() => {\r\n    const element = textRef.current;\r\n    let index = 0;\r\n\r\n    const type = () => {\r\n      if (index < sentence.length) {\r\n        element.innerHTML += sentence.charAt(index); // Add one character at a time\r\n        index++;\r\n        setTimeout(type, 100); // Type each letter with a delay of 100ms\r\n      }\r\n    };\r\n\r\n    type(); // Start the typing effect\r\n  }, []); // Only run once when the component mounts\r\n\r\n  return (\r\n    <div className=\"pt-16\">\r\n      <div className=\"flex flex-col bg-cover h-screen text-white lg:px-28 lg:py-10 sm:px-5 sm:py-2\" style={{ backgroundImage: 'url(\"/images/background.jpg\")' }}>\r\n        <div className=\"bg-white bg-opacity-10 w-full px-10 py-10\" style={{ borderRadius: \"55px\" }}>\r\n          <h1\r\n            ref={textRef} // The reference to control the text\r\n            className=\"sm:text-[3.5rem] lg:text-[5rem] min-h-[180px] font-normal leading-[1] w-[80%]\">\r\n            {/* The text will be typed out here */}\r\n          </h1>\r\n          <p className=\"mt-4 mb-8 leading-[1] text-base md:text-lg text-[#aea9b1] w-[75%]\">\r\n            Weâ€™re the architects of digital excellence across industries. We redefine business with cutting-edge digital strategies that invoke sector-wide transformation.\r\n          </p>\r\n          <button className=\"hidden md:block bg-white text-black font-semibold px-6 py-3 rounded-full hover:bg-[#60a6e7] hover:text-white\">\r\n            Book a Call\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;AAGe,SAAS;IACtB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAE,OAAO,gCAAgC;IAC9D,MAAM,WAAW,gDAAgD,gBAAgB;IAEjF,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,UAAU,QAAQ,OAAO;QAC/B,IAAI,QAAQ;QAEZ,MAAM,OAAO;YACX,IAAI,QAAQ,SAAS,MAAM,EAAE;gBAC3B,QAAQ,SAAS,IAAI,SAAS,MAAM,CAAC,QAAQ,8BAA8B;gBAC3E;gBACA,WAAW,MAAM,MAAM,yCAAyC;YAClE;QACF;QAEA,QAAQ,0BAA0B;IACpC,GAAG,EAAE,GAAG,0CAA0C;IAElD,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;YAA+E,OAAO;gBAAE,iBAAiB;YAAgC;sBACtJ,cAAA,8OAAC;gBAAI,WAAU;gBAA4C,OAAO;oBAAE,cAAc;gBAAO;;kCACvF,8OAAC;wBACC,KAAK;wBACL,WAAU;;;;;;kCAGZ,8OAAC;wBAAE,WAAU;kCAAoE;;;;;;kCAGjF,8OAAC;wBAAO,WAAU;kCAA+G;;;;;;;;;;;;;;;;;;;;;;AAO3I"}},
    {"offset": {"line": 84, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}